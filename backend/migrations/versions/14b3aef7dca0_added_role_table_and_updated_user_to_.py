"""Added role table and updated user to have PK

Revision ID: 14b3aef7dca0
Revises: 391e341f5fcf
Create Date: 2024-12-10 14:42:54.624561

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '14b3aef7dca0'
down_revision = '391e341f5fcf'
branch_labels = None
depends_on = None


def upgrade():
    # Ensure the role table has at least one entry
    op.execute("INSERT INTO role (id, role_name) VALUES (1, 'default_role') ON CONFLICT DO NOTHING")

    with op.batch_alter_table('user', schema=None) as batch_op:
        # Drop constraints associated with the 'role' column if any
        # batch_op.drop_constraint('constraint_name', type_='foreignkey')  # Example for dropping a foreign key constraint
        batch_op.drop_column('role')
        batch_op.add_column(sa.Column('role_id', sa.Integer(), nullable=False))
        batch_op.create_foreign_key('fk_user_role', 'role', ['role_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('role', sa.String(length=100), nullable=False))
        batch_op.drop_constraint('fk_user_role', type_='foreignkey')
        batch_op.drop_column('role_id')

    # ### end Alembic commands ###
